{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  class: \"photo-wall\"\n};\nconst _hoisted_3 = [\"src\", \"onClick\"];\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header, {\n    handleCollapse: _ctx.handleCollapse,\n    isCollapse: _ctx.isCollapse\n  }, null, 8, [\"handleCollapse\", \"isCollapse\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_container, null, {\n      default: _withCtx(() => [_createVNode(_component_el_header), _createVNode(_component_el_main, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dataList, (image, index) => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: index,\n            class: \"photo-wall__item\"\n          }, [_createElementVNode(\"img\", {\n            src: image.url,\n            onClick: $event => $options.viewImage(image)\n          }, null, 8, _hoisted_3)]);\n        }), 128))])]),\n        _: 1\n      })]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_dialog, {\n    \"model-value\": $data.viewImageDialog,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.viewImageDialog = !$data.viewImageDialog),\n    width: \"80%\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $data.currentImage.url,\n      class: \"full-image\"\n    }, null, 8, _hoisted_4)]),\n    _: 1\n  }, 8, [\"model-value\"])])], 64);\n}","map":{"version":3,"names":["class","_createVNode","_component_Header","handleCollapse","_ctx","isCollapse","_createElementVNode","_hoisted_1","_component_el_container","_component_el_header","_component_el_main","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","dataList","image","index","key","src","url","onClick","$event","$options","viewImage","_component_el_dialog","viewImageDialog","_cache","width","currentImage"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/views/Photo.vue"],"sourcesContent":["<template>\n  <Header :handleCollapse=\"handleCollapse\" :isCollapse=\"isCollapse\" />\n  <div class=\"home\">\n    <el-container>\n      <el-container>\n        <el-header>\n        </el-header>\n        <el-main>\n          <div class=\"photo-wall\">\n            <div v-for=\"(image, index) in dataList\" :key=\"index\" class=\"photo-wall__item\">\n              <img :src=\"image.url\" @click=\"viewImage(image)\">\n            </div>\n          </div>\n        </el-main>\n      </el-container>\n    </el-container>\n\n    <el-dialog :model-value=\"viewImageDialog\" @update:model-value=\"viewImageDialog = !viewImageDialog\" width=\"80%\">\n      <img :src=\"currentImage.url\" class=\"full-image\" />\n    </el-dialog>\n  </div>\n</template>\n  \n  <script>\n  import http from '@/utils/request'\n  \n  export default {\n    name: 'PhotoWall',\n    data() {\n      return {\n        dataList: [],\n    viewImageDialog: false,\n    currentImage: {}\n      }\n    },\n    created(){\n      this.getList();\n    },\n    methods: {\n      async getList(){\n              let {data,status} = (await http.get(`/api/photo`)).data;\n              console.log('Response:', data, status);\n              if(status === 0){\n                  this.dataList = data;\n              }else{\n                  this.dataList = [];\n              }\n          },\n          viewImage(image) {\n    this.currentImage = image;\n    this.viewImageDialog = true;\n  }\n    }\n  }\n  </script>\n  \n  <style>\n  .photo-wall {\n  /* 设置为网格布局容器 */\n  display: grid;\n  /* 设置网格列，每列最小宽度为 300px，自动填充 */\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  /* 设置网格行高 */\n  grid-auto-rows: 300px;\n  /* 设置网格间距 */\n  grid-gap: 5px;\n}\n  \n  .photo-wall__item {\n  /* 设置盒子的盒模型 */\n  box-sizing: border-box;\n  /* 设置为弹性盒子项目，让图片自动对齐 */\n  display: flex;\n  /* 设置图片容器的填充 */\n  padding: 30px;\n  /* 设置弹性盒子的伸缩比例 */\n  flex: 1 1 25%;\n}\n  \n  .photo-wall__item img {\n    max-width: 400px;\n    object-fit: contain;\n    display: block;\n    width: 100%;\n    transition: transform 0.3s ease-in-out;\n  }\n  \n  .photo-wall__item:hover img {\n    transform: scale(1.2);\n  }\n  .full-image {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  display: block;\n  margin: 0 auto;\n}\n\n  </style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAM;;EAMJA,KAAK,EAAC;AAAY;;;;;;;;;6DAP/BC,YAAA,CAAoEC,iBAAA;IAA3DC,cAAc,EAAEC,IAAA,CAAAD,cAAc;IAAGE,UAAU,EAAED,IAAA,CAAAC;iDACtDC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJN,YAAA,CAYeO,uBAAA;sBAXb,MAUe,CAVfP,YAAA,CAUeO,uBAAA;wBATb,MACY,CADZP,YAAA,CACYQ,oBAAA,GACZR,YAAA,CAMUS,kBAAA;0BALR,MAIM,CAJNJ,mBAAA,CAIM,OAJNK,UAIM,I,kBAHJC,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFwBC,KAAA,CAAAC,QAAQ,GAAzBC,KAAK,EAAEC,KAAK;+BAAzBN,mBAAA,CAEM;YAFmCO,GAAG,EAAED,KAAK;YAAElB,KAAK,EAAC;cACzDM,mBAAA,CAAgD;YAA1Cc,GAAG,EAAEH,KAAK,CAACI,GAAG;YAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACR,KAAK;;;;;;;;MAOvDhB,YAAA,CAEYyB,oBAAA;IAFA,aAAW,EAAEX,KAAA,CAAAY,eAAe;IAAG,qBAAkB,EAAAC,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAAER,KAAA,CAAAY,eAAe,IAAIZ,KAAA,CAAAY,eAAe;IAAEE,KAAK,EAAC;;sBACvG,MAAkD,CAAlDvB,mBAAA,CAAkD;MAA5Cc,GAAG,EAAEL,KAAA,CAAAe,YAAY,CAACT,GAAG;MAAErB,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
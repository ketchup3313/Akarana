{"ast":null,"code":"import http from '@/utils/request';\nimport { ElLoading } from 'element-plus';\nexport default {\n  data() {\n    return {\n      details: {},\n      participants: [],\n      bulletin: [],\n      urlWithTimestamp: []\n    };\n  },\n  methods: {\n    previewPdf() {\n      if (this.details.bulletin) {\n        const timestamp = new Date().getTime();\n        const urlWithTimestamp = `${this.details.bulletin}?t=${timestamp}`;\n        console.log(urlWithTimestamp);\n        window.open(urlWithTimestamp);\n      } else {\n        ElMessage({\n          message: \"No PDF available.\",\n          type: \"warning\"\n        });\n      }\n    },\n    async requestJoin(rallyid) {\n      let res = await http.post('/api/rally/requestJoin', {\n        userid: this.$store.state.userInfo.id,\n        username: this.$store.state.userInfo.username,\n        rallyid\n      });\n      let {\n        msg,\n        status\n      } = res.data;\n      if (status === 1) {\n        ElMessage({\n          message: msg,\n          type: \"error\"\n        });\n      } else {\n        ElMessage({\n          message: msg,\n          type: \"success\"\n        });\n      }\n    }\n  },\n  async created() {\n    let {\n      id\n    } = this.$route.query;\n    const loadingInstance = ElLoading.service({\n      lock: true,\n      text: \"Loading\",\n      background: \"rgba(0, 0, 0, 0.7)\"\n    });\n    try {\n      const [participantsRes, detailsRes] = await Promise.all([http.get(`/api/rally/queryParticipants?rallyid=${id}`), http.get(`/api/rally/queryInfo?id=${id}`)]);\n\n      // Handle participantsRes\n      let {\n        data: participantsData,\n        status: participantsStatus\n      } = participantsRes.data;\n      if (participantsStatus === 0) {\n        this.participants = participantsData;\n      }\n\n      // Handle detailsRes\n      let {\n        data: detailsData,\n        status: detailsStatus\n      } = detailsRes.data;\n      if (detailsStatus === 0) {\n        this.details = detailsData;\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      loadingInstance.close(); //close draw\n    }\n  }\n};","map":{"version":3,"names":["http","ElLoading","data","details","participants","bulletin","urlWithTimestamp","methods","previewPdf","timestamp","Date","getTime","console","log","window","open","ElMessage","message","type","requestJoin","rallyid","res","post","userid","$store","state","userInfo","id","username","msg","status","created","$route","query","loadingInstance","service","lock","text","background","participantsRes","detailsRes","Promise","all","get","participantsData","participantsStatus","detailsData","detailsStatus","error","close"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/views/RallyDetails.vue"],"sourcesContent":["<template>\n    <div>\n      <Header :handleCollapse=\"handleCollapse\" :isCollapse=\"isCollapse\" />\n      <div  class=\"container\">\n        <div v-if=\"JSON.stringify(details) !== '{}'\">\n          <header class=\"header_my\">\n            <h2>{{ details.mainTitle }}</h2>\n            <!-- <h4>{{details.subTitle}}</h4> -->\n            <p class=\"content clearfix\">\n              <img align=\"right\" style=\"min-width: 500px; max-width:500px;\" height=\"340\" :src=\"details.image\" alt=\"img\"\n                class=\"img\">\n  \n              {{ details.content }}\n            </p>\n  \n          </header>\n          <section class=\"section_join\">\n            <span v-if=\"details.status === 'open'\">Group is open</span>\n            <span v-else>Group is close</span>\n            <!-- <button @click=\"requestJoin(details.id)\" class=\"btn\">Request to join</button> -->\n            <!-- <button @click=\"requestJoin(details.id)\" class=\"btn\" :disabled=\"details.status === 'close'\">Request to\n              join</button> -->\n            <button @click=\"requestJoin(details.id)\" class=\"btn\" :class=\"{ 'btn-disabled': details.status === 'close' }\"\n              :disabled=\"details.status === 'close'\">\n              {{ details.status === 'open' ? 'Request to join' : 'This activity is closed' }}\n            </button>\n          </section>\n          <section class=\"small\">\n            <div class=\"small_item\">\n              <h3 class=\"bulletintext\">\n                Time\n              </h3>\n              <p>\n                {{ details.time }}\n              </p>\n            </div>\n            <div class=\"small_item\">\n              <h3 class=\"bulletintext\">\n                Address\n              </h3>\n              <p>\n                {{ details.address }}\n\n              \n                <div v-html=\"details.mapUrl\"></div>\n              </p>\n              <div class=\"participants-section\">\n    <h3>Who want to join:</h3>\n    <ul>\n      <li v-for=\"(participant, index) in participants\" :key=\"index\">\n        {{ participant.username }}\n      </li>\n    </ul>\n    <p v-if=\"participants.length === 0\">\n      There are no participants for this rally yet.\n    </p>\n    <h3 class=\"bulletintext\">Bulletin:</h3>\n   \n                <div class=\"download-pdf-button\" >\n  <button @click=\"previewPdf\" class=\"btn download-pdf-btn\">Download PDF</button>\n</div>\n    \n  </div>\n  <!-- 改成英文的，增加谁参加了这个活动， -->\n              \n            </div>\n          </section>\n        </div>\n       \n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import http from '@/utils/request'\n  import { ElLoading } from 'element-plus';\n\n  export default {\n    \n    data() {\n      return {\n        details: {},\n        participants: [],\n        bulletin: [],\n        urlWithTimestamp:[]\n      }\n    },\n    methods: {\n      previewPdf() {\n    if (this.details.bulletin) {\n      const timestamp = new Date().getTime();\n    const urlWithTimestamp = `${this.details.bulletin}?t=${timestamp}`;\n    console.log(urlWithTimestamp);\n      window.open(urlWithTimestamp);\n    } else {\n      ElMessage({\n        message: \"No PDF available.\",\n        type: \"warning\",\n      });\n    }\n  },\n      async requestJoin(rallyid) {\n        let res = await http.post('/api/rally/requestJoin', {\n          userid: this.$store.state.userInfo.id,\n          username: this.$store.state.userInfo.username,\n          rallyid,\n        })\n        let { msg, status } = res.data;\n  \n        if (status === 1) {\n          ElMessage({\n            message: msg,\n            type: \"error\",\n          });\n        } else {\n          ElMessage({\n            message: msg,\n            type: \"success\",\n          });\n        }\n      },\n    },\n \n    async created() {\n    let { id } = this.$route.query;\n    const loadingInstance = ElLoading.service({\n      lock: true,\n      text: \"Loading\",\n      background: \"rgba(0, 0, 0, 0.7)\",\n    });\n\n    try {\n      const [participantsRes, detailsRes] = await Promise.all([\n        http.get(`/api/rally/queryParticipants?rallyid=${id}`),\n        http.get(`/api/rally/queryInfo?id=${id}`),\n      ]);\n\n      // Handle participantsRes\n      let { data: participantsData, status: participantsStatus } = participantsRes.data;\n      if (participantsStatus === 0) {\n        this.participants = participantsData;\n      }\n\n      // Handle detailsRes\n      let { data: detailsData, status: detailsStatus } = detailsRes.data;\n      if (detailsStatus === 0) {\n        this.details = detailsData;\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      loadingInstance.close(); //close draw\n    }\n  },\n\n\n\n  }\n  </script>\n  \n  <style  scoped>\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  \n  .clearfix:after {\n    content: \"\";\n    display: block;\n    height: 0;\n    clear: both;\n  }\n  \n  .small_item p {\n    margin: 16px 0px;\n    letter-spacing: 2px;\n    color: #747474;\n  }\n  \n  .p {\n    color: #6c6b6b;\n  }\n  \n  .btn {\n    cursor: pointer;\n    color: #FFFFFF;\n    padding: 10px 20px;\n    letter-spacing: 2px;\n    border-radius: 30px;\n    background-image: linear-gradient(90deg, rgb(149, 223, 236), rgb(138, 226, 138));\n  }\n  \n  .btn-disabled {\n    background-color: #ccc;\n    color: #999;\n    background-image: none;\n  }\n  \n  .section_join {\n    margin: 20px 0px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 6px;\n    padding: 20px 30px;\n    background-color: #fafafa;\n  }\n  \n  .content {\n    letter-spacing: 1px;\n    line-height: 40px;\n  }\n  \n  .header_my {\n    /* display: flex; */\n  }\n  \n  .img {\n    border-radius: 10px;\n    object-fit: cover;\n  }\n  \n  .container {\n    padding: 20px 20%;\n  }\n  .bulletintext{\n    margin-top: 30px;\n  }\n  </style>"],"mappings":"AA0EE,OAAOA,IAAG,MAAO,iBAAgB;AACjC,SAASC,SAAQ,QAAS,cAAc;AAExC,eAAe;EAEbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAC;IACnB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACf,IAAI,IAAI,CAACL,OAAO,CAACE,QAAQ,EAAE;QACzB,MAAMI,SAAQ,GAAI,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;QACxC,MAAML,gBAAe,GAAK,GAAE,IAAI,CAACH,OAAO,CAACE,QAAS,MAAKI,SAAU,EAAC;QAClEG,OAAO,CAACC,GAAG,CAACP,gBAAgB,CAAC;QAC3BQ,MAAM,CAACC,IAAI,CAACT,gBAAgB,CAAC;MAC/B,OAAO;QACLU,SAAS,CAAC;UACRC,OAAO,EAAE,mBAAmB;UAC5BC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC;IACG,MAAMC,WAAWA,CAACC,OAAO,EAAE;MACzB,IAAIC,GAAE,GAAI,MAAMrB,IAAI,CAACsB,IAAI,CAAC,wBAAwB,EAAE;QAClDC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,EAAE;QACrCC,QAAQ,EAAE,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACE,QAAQ;QAC7CR;MACF,CAAC;MACD,IAAI;QAAES,GAAG;QAAEC;MAAO,IAAIT,GAAG,CAACnB,IAAI;MAE9B,IAAI4B,MAAK,KAAM,CAAC,EAAE;QAChBd,SAAS,CAAC;UACRC,OAAO,EAAEY,GAAG;UACZX,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,OAAO;QACLF,SAAS,CAAC;UACRC,OAAO,EAAEY,GAAG;UACZX,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMa,OAAOA,CAAA,EAAG;IAChB,IAAI;MAAEJ;IAAG,IAAI,IAAI,CAACK,MAAM,CAACC,KAAK;IAC9B,MAAMC,eAAc,GAAIjC,SAAS,CAACkC,OAAO,CAAC;MACxCC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IAEF,IAAI;MACF,MAAM,CAACC,eAAe,EAAEC,UAAU,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CACtD1C,IAAI,CAAC2C,GAAG,CAAE,wCAAuChB,EAAG,EAAC,CAAC,EACtD3B,IAAI,CAAC2C,GAAG,CAAE,2BAA0BhB,EAAG,EAAC,CAAC,CAC1C,CAAC;;MAEF;MACA,IAAI;QAAEzB,IAAI,EAAE0C,gBAAgB;QAAEd,MAAM,EAAEe;MAAmB,IAAIN,eAAe,CAACrC,IAAI;MACjF,IAAI2C,kBAAiB,KAAM,CAAC,EAAE;QAC5B,IAAI,CAACzC,YAAW,GAAIwC,gBAAgB;MACtC;;MAEA;MACA,IAAI;QAAE1C,IAAI,EAAE4C,WAAW;QAAEhB,MAAM,EAAEiB;MAAc,IAAIP,UAAU,CAACtC,IAAI;MAClE,IAAI6C,aAAY,KAAM,CAAC,EAAE;QACvB,IAAI,CAAC5C,OAAM,GAAI2C,WAAW;MAC5B;IACF,EAAE,OAAOE,KAAK,EAAE;MACdpC,OAAO,CAACoC,KAAK,CAACA,KAAK,CAAC;IACtB,UAAU;MACRd,eAAe,CAACe,KAAK,EAAE,EAAE;IAC3B;EACF;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
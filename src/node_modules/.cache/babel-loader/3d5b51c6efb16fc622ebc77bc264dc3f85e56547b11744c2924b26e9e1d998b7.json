{"ast":null,"code":"import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Login from \"../views/Login\";\n\n//router config\nconst router = createRouter({\n  //choose hash router\n  history: createWebHashHistory(),\n  routes: [{\n    path: \"/\",\n    redirect: \"/login\"\n  }, {\n    path: \"/home\",\n    component: () => import(\"../views/Home.vue\"),\n    meta: {\n      isAuth: true\n    }\n  }, {\n    path: \"/members\",\n    component: () => import(\"../views/Members.vue\")\n  }, {\n    path: \"/login\",\n    name: 'login',\n    component: () => import(\"../views/Login.vue\")\n  }, {\n    path: \"/NewsLetter\",\n    component: () => import(\"../views/NewsLetter.vue\")\n  }, {\n    path: \"/Photo\",\n    component: () => import(\"../views/Photo.vue\")\n  }, {\n    path: \"/profile\",\n    component: () => import(\"../views/Profile.vue\")\n  }, {\n    path: \"/test\",\n    component: () => import(\"../views/test.vue\")\n  }, {\n    path: \"/edit\",\n    component: () => import(\"../views/Avatar.vue\")\n  }, {\n    path: \"/rally\",\n    component: () => import(\"../views/Rally.vue\")\n  }, {\n    path: '/RallyDetail',\n    name: 'RallyDetail',\n    component: () => import('../views/RallyDetails.vue')\n  }, {\n    path: '/calendar',\n    component: () => import('../views/calendar.vue')\n  }, {\n    path: '/document',\n    component: () => import('../views/Opendoc.vue')\n  }]\n});\n\n//router interception (if I did not login,I can not access the home page)\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/login') {\n    if (localStorage.getItem(\"@#@TOKEN\")) {\n      next('/home');\n    } else {\n      next();\n    }\n    return;\n  }\n  if (to.meta.isAuth) {\n    if (localStorage.getItem(\"@#@TOKEN\")) {\n      next();\n    } else {\n      ElMessage.error(\"Please login first\");\n      next('/login');\n    }\n    return;\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","Login","router","history","routes","path","redirect","component","meta","isAuth","name","beforeEach","to","from","next","localStorage","getItem","ElMessage","error"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Login from \"../views/Login\";\n\n\n//router config\nconst router = createRouter({\n  //choose hash router\n  history: createWebHashHistory(),\n  routes: [\n    {\n      path: \"/\",\n      redirect: \"/login\",\n    },\n    {\n      path: \"/home\",\n      component: () => import(\"../views/Home.vue\"),\n      meta: {\n        isAuth: true,\n      },\n    },\n    {\n      path: \"/members\",\n      component: () => import(\"../views/Members.vue\"),\n    },\n    \n    {\n      path: \"/login\",\n      name:'login',\n      component: () => import(\"../views/Login.vue\"),\n    },\n    {\n      path: \"/NewsLetter\",\n      component: () => import(\"../views/NewsLetter.vue\"),\n    },{\n      path: \"/Photo\",\n      component: () => import(\"../views/Photo.vue\"),\n    },\n    {\n      path: \"/profile\",\n      component: () => import(\"../views/Profile.vue\"),\n    },\n    {\n      path: \"/test\",\n      component: () => import(\"../views/test.vue\"),\n    },\n    {\n      path: \"/edit\",\n      component: () => import(\"../views/Avatar.vue\"),\n    },\n    {\n      path:\"/rally\",\n      component:()=>import(\"../views/Rally.vue\")\n    },\n     {\n      path:'/RallyDetail',\n      name:'RallyDetail',\n      component:()=>import('../views/RallyDetails.vue')\n    },\n    {\n      path:'/calendar',\n      component:()=>import('../views/calendar.vue')\n    },\n    {\n      path:'/document',\n      component:()=>import('../views/Opendoc.vue')\n    }\n\n\n  ],\n});\n\n//router interception (if I did not login,I can not access the home page)\nrouter.beforeEach((to, from, next) => {\n  if(to.path === '/login'){\n    if (localStorage.getItem(\"@#@TOKEN\")) {\n      next('/home');\n    }else{\n      next();\n    }\n    return;\n  }\n  if(to.meta.isAuth){\n    if (localStorage.getItem(\"@#@TOKEN\")) {\n      next();\n    } else {\n      ElMessage.error(\"Please login first\");\n      next('/login');\n    }\n    return;\n  }\n  next();\n});\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,OAAOC,KAAK,MAAM,gBAAgB;;AAGlC;AACA,MAAMC,MAAM,GAAGH,YAAY,CAAC;EAC1B;EACAI,OAAO,EAAEH,oBAAoB,CAAC,CAAC;EAC/BI,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,IAAI,EAAE,OAAO;IACbE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mBAAmB,CAAC;IAC5CC,IAAI,EAAE;MACJC,MAAM,EAAE;IACV;EACF,CAAC,EACD;IACEJ,IAAI,EAAE,UAAU;IAChBE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB;EAChD,CAAC,EAED;IACEF,IAAI,EAAE,QAAQ;IACdK,IAAI,EAAC,OAAO;IACZH,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;EAC9C,CAAC,EACD;IACEF,IAAI,EAAE,aAAa;IACnBE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB;EACnD,CAAC,EAAC;IACAF,IAAI,EAAE,QAAQ;IACdE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;EAC9C,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB;EAChD,CAAC,EACD;IACEF,IAAI,EAAE,OAAO;IACbE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mBAAmB;EAC7C,CAAC,EACD;IACEF,IAAI,EAAE,OAAO;IACbE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB;EAC/C,CAAC,EACD;IACEF,IAAI,EAAC,QAAQ;IACbE,SAAS,EAACA,CAAA,KAAI,MAAM,CAAC,oBAAoB;EAC3C,CAAC,EACA;IACCF,IAAI,EAAC,cAAc;IACnBK,IAAI,EAAC,aAAa;IAClBH,SAAS,EAACA,CAAA,KAAI,MAAM,CAAC,2BAA2B;EAClD,CAAC,EACD;IACEF,IAAI,EAAC,WAAW;IAChBE,SAAS,EAACA,CAAA,KAAI,MAAM,CAAC,uBAAuB;EAC9C,CAAC,EACD;IACEF,IAAI,EAAC,WAAW;IAChBE,SAAS,EAACA,CAAA,KAAI,MAAM,CAAC,sBAAsB;EAC7C,CAAC;AAIL,CAAC,CAAC;;AAEF;AACAL,MAAM,CAACS,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAGF,EAAE,CAACP,IAAI,KAAK,QAAQ,EAAC;IACtB,IAAIU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;MACpCF,IAAI,CAAC,OAAO,CAAC;IACf,CAAC,MAAI;MACHA,IAAI,CAAC,CAAC;IACR;IACA;EACF;EACA,IAAGF,EAAE,CAACJ,IAAI,CAACC,MAAM,EAAC;IAChB,IAAIM,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;MACpCF,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLG,SAAS,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACrCJ,IAAI,CAAC,QAAQ,CAAC;IAChB;IACA;EACF;EACAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AACF,eAAeZ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
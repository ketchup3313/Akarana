{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport http from '@/utils/request';\nexport default {\n  __name: 'Rally',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const dataList = ref([]);\n    const router = useRouter();\n    async function getList() {\n      let {\n        data,\n        status\n      } = (await http.get('/api/rally')).data;\n      if (status === 1) {\n        data.sort((a, b) => a.status === 'open' ? -1 : b.status === 'open' ? 1 : 0);\n        dataList.value = data;\n      } else {\n        dataList.value = [];\n      }\n    }\n    function lintoDetail(id) {\n      router.push({\n        path: '/RallyDetail',\n        query: {\n          id\n        }\n      });\n    }\n    onMounted(getList);\n    const __returned__ = {\n      dataList,\n      router,\n      getList,\n      lintoDetail,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get http() {\n        return http;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","http","dataList","router","getList","data","status","get","sort","a","b","value","lintoDetail","id","push","path","query"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/views/Rally.vue"],"sourcesContent":["<template>\n  <div>\n      <Header :handleCollapse=\"handleCollapse\" :isCollapse=\"isCollapse\" />\n      <div class=\"list\">\n          <div class=\"list-item\" v-for=\"item in dataList\" :key=\"item.id\" @click=\"lintoDetail(item.id)\">\n              <img width=\"400\" height=\"200\" :src=\"item.image\" alt=\"\" />\n              <div class=\"footer\">\n                  <div>\n                      <h3>{{ item.mainTitle }}</h3>\n                      <p>{{ item.subTitle }}</p>\n                  </div>\n                  <div :class=\"['tab', item.status]\">\n                      {{ item.status === 'open' ? 'open' : 'close' }}\n                  </div>\n              </div>\n          </div>\n     \n      </div>\n  </div>\n</template>\n\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport http from '@/utils/request';\n\nconst dataList = ref([]);\nconst router = useRouter();\n\nasync function getList() {\nlet { data, status } = (await http.get('/api/rally')).data;\nif (status === 1) {\n  data.sort((a, b) => (a.status === 'open' ? -1 : b.status === 'open' ? 1 : 0));\n\n  dataList.value = data;\n} else {\n  dataList.value = [];\n}\n}\n\nfunction lintoDetail(id) {\nrouter.push({\n  path: '/RallyDetail',\n  query: {\n    id,\n  }\n});\n}\n\nonMounted(getList);\n</script>\n\n\n\n<!--\n<script setup>\nimport http from'@/utils/request'\n\nconst rally = {\ndata() {\n  return {\n    dataList: []\n  };\n},\ncreated() {\n  this.getList();\n},\nmethods: {\n  lintoDetail(id) {\n    this.$router.push({\n      path: '/RallyDetail',\n      query: {\n        id\n      }\n    })\n  },\n  async getList() {\n    let { data, status } = (await http.get(`/api/rally`)).data;\n    if (status === 1) {\n      this.dataList = data;\n    } else {\n      this.dataList = [];\n    }\n  },\n},\n};\n\n\n\n\n</script> -->\n\n\n\n\n\n\n<style scoped>\n.footer {\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n.tab {\n  padding: 3px 6px;\n  border-radius: 6px;\n}\n\n.open {\n  background-color: rgb(206, 243, 206);\n  color: green;\n}\n\n.close {\n  color: rgb(203, 61, 61);\n  background-color: rgb(238, 194, 194);\n}\n\n.list {\n  margin: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 400px);\n  grid-row-gap: 20px;\n  grid-column-gap: 20px;\n  justify-content: center;\n\n  /* grid-auto-columns: ; */\n}\n\n.list-item {}\n\n.list-item img {\n  border-radius: 10px;\n  object-fit: cover;\n}\n\n.list-item p {\n  color: #5e5e5e;\n}\n</style>"],"mappings":";AAuBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,IAAI,MAAM,iBAAiB;;;;;;;IAElC,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,MAAM,GAAGH,SAAS,EAAE;IAE1B,eAAeI,OAAOA,CAAA,EAAG;MACzB,IAAI;QAAEC,IAAI;QAAEC;MAAO,CAAC,GAAG,CAAC,MAAML,IAAI,CAACM,GAAG,CAAC,YAAY,CAAC,EAAEF,IAAI;MAC1D,IAAIC,MAAM,KAAK,CAAC,EAAE;QAChBD,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACH,MAAM,KAAK,MAAM,GAAG,CAAC,CAAC,GAAGI,CAAC,CAACJ,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,CAAE,CAAC;QAE7EJ,QAAQ,CAACS,KAAK,GAAGN,IAAI;MACvB,CAAC,MAAM;QACLH,QAAQ,CAACS,KAAK,GAAG,EAAE;MACrB;IACA;IAEA,SAASC,WAAWA,CAACC,EAAE,EAAE;MACzBV,MAAM,CAACW,IAAI,CAAC;QACVC,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE;UACLH;QACF;MACF,CAAC,CAAC;IACF;IAEAd,SAAS,CAACK,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import http from '@/utils/request';\nexport default {\n  name: 'PhotoWall',\n  data() {\n    return {\n      dataList: [],\n      viewImageDialog: false,\n      currentImage: {}\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      let {\n        data,\n        status\n      } = (await http.get(`/api/photo`)).data;\n      console.log('Response:', data, status);\n      if (status === 0) {\n        this.dataList = data;\n      } else {\n        this.dataList = [];\n      }\n    },\n    viewImage(image) {\n      this.currentImage = image;\n      this.viewImageDialog = true;\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","dataList","viewImageDialog","currentImage","created","getList","methods","status","get","console","log","viewImage","image"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/views/Photo.vue"],"sourcesContent":["<template>\n  <Header :handleCollapse=\"handleCollapse\" :isCollapse=\"isCollapse\" />\n  <div class=\"home\">\n    <el-container>\n      <el-container>\n        <el-header>\n        </el-header>\n        <el-main>\n          <div class=\"photo-wall\">\n            <div v-for=\"(image, index) in dataList\" :key=\"index\" class=\"photo-wall__item\">\n              <img :src=\"image.url\" @click=\"viewImage(image)\">\n            </div>\n          </div>\n        </el-main>\n      </el-container>\n    </el-container>\n\n    <el-dialog :model-value=\"viewImageDialog\" @update:model-value=\"viewImageDialog = !viewImageDialog\" width=\"80%\">\n      <img :src=\"currentImage.url\" class=\"full-image\" />\n    </el-dialog>\n  </div>\n</template>\n  \n  <script>\n  import http from '@/utils/request'\n  \n  export default {\n    name: 'PhotoWall',\n    data() {\n      return {\n        dataList: [],\n    viewImageDialog: false,\n    currentImage: {}\n      }\n    },\n    created(){\n      this.getList();\n    },\n    methods: {\n      async getList(){\n              let {data,status} = (await http.get(`/api/photo`)).data;\n              console.log('Response:', data, status);\n              if(status === 0){\n                  this.dataList = data;\n              }else{\n                  this.dataList = [];\n              }\n          },\n          viewImage(image) {\n    this.currentImage = image;\n    this.viewImageDialog = true;\n  }\n    }\n  }\n  </script>\n  \n  <style>\n  .photo-wall {\n  /* 设置为网格布局容器 */\n  display: grid;\n  /* 设置网格列，每列最小宽度为 300px，自动填充 */\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  /* 设置网格行高 */\n  grid-auto-rows: 300px;\n  /* 设置网格间距 */\n  grid-gap: 5px;\n}\n  \n  .photo-wall__item {\n  /* 设置盒子的盒模型 */\n  box-sizing: border-box;\n  /* 设置为弹性盒子项目，让图片自动对齐 */\n  display: flex;\n  /* 设置图片容器的填充 */\n  padding: 30px;\n  /* 设置弹性盒子的伸缩比例 */\n  flex: 1 1 25%;\n}\n  \n  .photo-wall__item img {\n    max-width: 400px;\n    object-fit: contain;\n    display: block;\n    width: 100%;\n    transition: transform 0.3s ease-in-out;\n  }\n  \n  .photo-wall__item:hover img {\n    transform: scale(1.2);\n  }\n  .full-image {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n  display: block;\n  margin: 0 auto;\n}\n\n  </style>"],"mappings":"AAwBE,OAAOA,IAAG,MAAO,iBAAgB;AAEjC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAChBC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,CAAC;IACb;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,OAAO,EAAE;EAChB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAE;MACP,IAAI;QAACL,IAAI;QAACO;MAAM,IAAI,CAAC,MAAMT,IAAI,CAACU,GAAG,CAAE,YAAW,CAAC,EAAER,IAAI;MACvDS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,IAAI,EAAEO,MAAM,CAAC;MACtC,IAAGA,MAAK,KAAM,CAAC,EAAC;QACZ,IAAI,CAACN,QAAO,GAAID,IAAI;MACxB,CAAC,MAAI;QACD,IAAI,CAACC,QAAO,GAAI,EAAE;MACtB;IACJ,CAAC;IACDU,SAASA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACT,YAAW,GAAIS,KAAK;MACzB,IAAI,CAACV,eAAc,GAAI,IAAI;IAC7B;EACE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
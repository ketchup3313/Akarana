{"ast":null,"code":"export default {\n  data() {\n    return {\n      userInfo: null,\n      showEditForm: false,\n      editedUserInfo: {}\n    };\n  },\n  async created() {\n    // 这里的 id 应该从登录后的响应中获取\n    const id = 'your_id_here';\n    try {\n      const response = await api.getUserInfo(id);\n      this.userInfo = response.data;\n      this.editedUserInfo = {\n        ...this.userInfo\n      }; // 初始化编辑表单的数据\n    } catch (error) {\n      console.error('获取用户信息失败', error);\n    }\n  },\n  methods: {\n    async submitForm() {\n      try {\n        await api.updateUserInfo(this.editedUserInfo);\n        this.userInfo = {\n          ...this.editedUserInfo\n        }; // 更新当前显示的用户信息\n        this.showEditForm = false; // 隐藏编辑表单\n      } catch (error) {\n        console.error('更新用户信息失败', error);\n      }\n    }\n  },\n  methods: {\n    async submitForm() {\n      // ... 发送更新后的用户信息\n      this.isEditing = false;\n    }\n  }\n};","map":{"version":3,"names":["data","userInfo","showEditForm","editedUserInfo","created","id","response","api","getUserInfo","error","console","methods","submitForm","updateUserInfo","isEditing"],"sources":["/Users/wucongzhen/Documents/GitHub/Akarana/src/src/views/test.vue"],"sourcesContent":["<template>\n  <div class=\"user-profile\">\n    <h2 class=\"profile-title\">个人资料</h2>\n    <div v-if=\"!showEditForm\" class=\"profile-content\">\n      <p>First Name: </p>\n      <p>Last Name: </p>\n      <p>Phone Number: </p>\n      <p>Username: </p>\n      <p>Password:</p>\n      <p>Address: </p>\n      <p>Email Address:</p>\n      <p>Birthday: </p>\n      <button @click=\"showEditForm = !showEditForm\" class=\"edit-btn\">Edit</button>\n    </div>\n\n    \n    <div v-else class=\"edit-form\">\n      <h3>Edit Profile</h3>\n      <form @submit.prevent=\"submitForm\">\n        <label for=\"firstName\">First Name:</label>\n        <input id=\"firstName\" v-model=\"editedUserInfo.firstName\" type=\"text\" />\n        <!-- Add other input fields for other user info properties -->\n        <label for=\"lastName\">Last Name:</label>\n        <input id=\"lastName\" v-model=\"editedUserInfo.lastName\" type=\"text\" />\n        <label for=\"phoneNumber\">Phone Number:</label>\n        <input id=\"phoneNumber\" v-model=\"editedUserInfo.phoneNumber\" type=\"text\" />\n        <label for=\"username\">Username:</label>\n        <input id=\"username\" v-model=\"editedUserInfo.username\" type=\"text\" />\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" v-model=\"editedUserInfo.password\" type=\"text\" />\n        <label for=\"address\">Address:</label>\n        <input id=\"address\" v-model=\"editedUserInfo.address\" type=\"text\" />\n        <label for=\"emailAddress\">Email Address:</label>\n        <input id=\"emailAddress\" v-model=\"editedUserInfo.emailAddress\" type=\"text\" />\n        <label for=\"birthday\">Birthday:</label>\n        <input id=\"birthday\" v-model=\"editedUserInfo.birthday\" type=\"text\" />\n\n        \n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      userInfo: null,\n      showEditForm: false,\n      editedUserInfo: {},\n    };\n  },\n  async created() {\n    // 这里的 id 应该从登录后的响应中获取\n    const id = 'your_id_here';\n    try {\n      const response = await api.getUserInfo(id);\n      this.userInfo = response.data;\n      this.editedUserInfo = { ...this.userInfo }; // 初始化编辑表单的数据\n    } catch (error) {\n      console.error('获取用户信息失败', error);\n    }\n  },\n  methods: {\n    async submitForm() {\n      try {\n        await api.updateUserInfo(this.editedUserInfo);\n        this.userInfo = { ...this.editedUserInfo }; // 更新当前显示的用户信息\n        this.showEditForm = false; // 隐藏编辑表单\n      } catch (error) {\n        console.error('更新用户信息失败', error);\n      }\n    },\n  },\n  methods: {\n    async submitForm() {\n      // ... 发送更新后的用户信息\n      this.isEditing = false;\n    },\n  },\n};\n\n</script>\n\n<style scoped>\n.edit-btn {\n  background-color: #409eff;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 10px 2px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.edit-form {\n  background-color: #f5f5f5;\n  padding: 20px;\n  margin-top: 20px;\n  border-radius: 5px;\n}\n\n.edit-form label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.edit-form input {\n  display: block;\n  width:100%;\npadding: 5px;\nmargin-bottom: 15px;\n}\n\n.edit-form button {\nbackground-color: #4CAF50;\nborder: none;\ncolor: white;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 10px 2px;\ncursor: pointer;\nborder-radius: 5px;\n}\n.user-profile {\n  width: 80%;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n}\n\n.profile-title {\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.profile-content p {\n  font-size: 18px;\n  margin-bottom: 10px;\n}\n</style>"],"mappings":"AA6CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,KAAK;MACnBC,cAAc,EAAE,CAAC;IACnB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAMC,EAAC,GAAI,cAAc;IACzB,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,GAAG,CAACC,WAAW,CAACH,EAAE,CAAC;MAC1C,IAAI,CAACJ,QAAO,GAAIK,QAAQ,CAACN,IAAI;MAC7B,IAAI,CAACG,cAAa,GAAI;QAAE,GAAG,IAAI,CAACF;MAAS,CAAC,EAAE;IAC9C,EAAE,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAML,GAAG,CAACM,cAAc,CAAC,IAAI,CAACV,cAAc,CAAC;QAC7C,IAAI,CAACF,QAAO,GAAI;UAAE,GAAG,IAAI,CAACE;QAAe,CAAC,EAAE;QAC5C,IAAI,CAACD,YAAW,GAAI,KAAK,EAAE;MAC7B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACA,IAAI,CAACE,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}